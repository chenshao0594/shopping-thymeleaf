import groovy.json.JsonSlurper
import org.gradle.internal.os.OperatingSystem

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.9"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}"
        classpath "org.springframework.build.gradle:propdeps-plugin:0.0.7"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
    }
}
plugins {
    id 'org.springframework.boot' version '1.5.4.RELEASE'
}

apply plugin: 'java'
sourceCompatibility=1.8
targetCompatibility=1.8
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'io.spring.dependency-management'

apply plugin: 'eclipse'
defaultTasks 'bootRun'

eclipse {
    classpath {
       downloadSources=true
    }
}

bootRepackage {
   mainClass = 'com.shoppay.EshopApplication'
}

war {

}

springBoot {
    mainClass = 'com.shoppay.EshopApplication'
    executable = true
    buildInfo()
}

if (OperatingSystem.current().isWindows()) {
    task pathingJar(type: Jar) {
        dependsOn configurations.runtime
        appendix = 'pathing'

        doFirst {
            manifest {
                attributes 'Class-Path': configurations.runtime.files.collect {
                    it.toURL().toString().replaceFirst(/file:\/+/, '/').replaceAll(' ', '%20')
                }.join(' ')
            }
        }
    }

    bootRun {
        addResources = false
        dependsOn pathingJar
        doFirst {
            classpath = files("$buildDir/classes/main", "$buildDir/resources/main", pathingJar.archivePath)
        }
    }
} else {
    bootRun {
        addResources = false
    }
}

apply from: 'gradle/mapstruct.gradle'
apply from: 'gradle/docker.gradle'

if (project.hasProperty('prod')) {
    apply from: 'gradle/profile_prod.gradle'
} else {
    apply from: 'gradle/profile_dev.gradle'
}

if (project.hasProperty('graphite')) {
    apply from: 'gradle/graphite.gradle'
}

if (project.hasProperty('prometheus')) {
    apply from: 'gradle/prometheus.gradle'
}

group = 'com.shoppay'
description = ''

configurations {
    providedRuntime
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
	compile project(':core')
    compile "io.github.jhipster:jhipster:${jhipster_server_version}"
    compile "io.dropwizard.metrics:metrics-core:${dropwizard_metrics_version}"
    compile "io.dropwizard.metrics:metrics-jcache:${dropwizard_metrics_version}"
    compile "io.dropwizard.metrics:metrics-jvm:${dropwizard_metrics_version}"
    compile "io.dropwizard.metrics:metrics-servlet:${dropwizard_metrics_version}"
    compile "io.dropwizard.metrics:metrics-json:${dropwizard_metrics_version}"
    compile "io.dropwizard.metrics:metrics-servlets:${dropwizard_metrics_version}"
    compile ("net.logstash.logback:logstash-logback-encoder:${logstash_logback_encoder_version}") {
        exclude(group: 'ch.qos.logback')
    }
    compile "com.fasterxml.jackson.datatype:jackson-datatype-json-org"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hppc"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5"
    compile "com.fasterxml.jackson.core:jackson-annotations"
    compile "com.fasterxml.jackson.core:jackson-databind"
    compile ("com.ryantenney.metrics:metrics-spring:${metrics_spring_version}")
    compile "javax.cache:cache-api"
    compile "org.hibernate:hibernate-core:${hibernate_version}"
    compile ("com.zaxxer:HikariCP:${hikaricp_version}")
    compile "org.apache.commons:commons-lang3:${commons_lang_version}"
    compile "commons-io:commons-io:${commons_io_version}"
    compile "commons-validator:commons-validator:${commons_validator_version}"
    compile "javax.transaction:javax.transaction-api"
    compile "org.ehcache:ehcache"
    compile "org.hibernate:hibernate-jcache:${hibernate_version}"
    compile "org.hibernate:hibernate-envers"
    compile "org.hibernate:hibernate-validator"
    compile "org.springframework.boot:spring-boot-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-loader-tools"
    compile "org.springframework.boot:spring-boot-starter-mail"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-aop"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
   
    compile "net.java.dev.jna:jna"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile ("org.springframework.boot:spring-boot-starter-web") {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile "org.springframework.boot:spring-boot-starter-undertow"
    compile "org.springframework.boot:spring-boot-starter-websocket"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    compile "org.springframework.boot:spring-boot-starter-cloud-connectors"
    compile ("org.springframework:spring-context-support")
    compile "org.springframework.security:spring-security-config"
    compile "org.springframework.security:spring-security-data"
    compile "org.springframework.security:spring-security-web"
    compile "org.springframework.security:spring-security-messaging"
    compile "io.springfox:springfox-bean-validators:${springfox_version}"
    compile "mysql:mysql-connector-java"
    compile "org.mapstruct:mapstruct-jdk8:${mapstruct_version}"
    compile "org.apache.httpcomponents:httpclient"
    compile "org.springframework.social:spring-social-security"
    compile "org.springframework.social:spring-social-google:${spring_social_google_version}"
    compile "org.springframework.social:spring-social-facebook"
    compile "org.springframework.social:spring-social-twitter"
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    compile group: 'com.itextpdf', name: 'itextpdf', version: '5.5.11'

    compile group: 'org.webjars', name: 'bootstrap', version: '4.0.0-alpha.6-1'
    compile group: 'org.webjars', name: 'jquery', version: '3.2.0'
    compile group: 'org.webjars', name: 'font-awesome', version: '4.7.0'
    compile group: 'org.webjars', name: 'jquery-ui', version: '1.12.1'
    compile group: 'org.webjars', name: 'select2', version: '4.0.3'
    compile group: 'org.webjars', name: 'datatables', version: '1.10.13'
    compile group: 'org.webjars', name: 'jquery-ui-themes', version: '1.12.1'
    compile group: 'org.webjars', name: 'tether', version: '1.4.0'
    compile group: 'org.webjars', name: 'jquery-file-upload', version: '9.10.1'
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-conditionalcomments', version: '2.1.2.RELEASE'
	compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity4', version: '3.0.2.RELEASE'
    compile group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.4'
    compile group: 'io.github.jpenren', name: 'thymeleaf-spring-data-dialect', version: '3.3.0'
    compile group: 'com.google.guava', name: 'guava', version: '21.0'
    compile group: 'org.springframework.webflow', name: 'spring-webflow', version: '2.4.4.RELEASE'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.2'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
    compile group: 'net.coobird', name: 'thumbnailator', version: '0.4.8'
    compile group: 'net.sf.dozer', name: 'dozer', version: '5.5.1'
    compile group: 'com.maxmind.geoip2', name: 'geoip2', version: '2.9.0'
}

clean {
    delete "target"
}


task cleanResources(type: Delete) {
    delete 'build/resources'
}



task stage(dependsOn: 'bootRepackage') {
}


compileJava.dependsOn processResources
processResources.dependsOn cleanResources,bootBuildInfo
bootBuildInfo.mustRunAfter cleanResources
